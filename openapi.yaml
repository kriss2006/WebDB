  openapi: 3.0.0
info:
  title: Flask User Management API
  description: API for managing users using Flask and SQLAlchemy
  version: 1.0.0

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              example: [{'id': 1, 'name': 'John'}, {'id': 2, 'name': 'Jane'}]
    post:
      summary: Add a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: User added successfully
          content:
            application/json:
              example: {'message': 'User added successfully'}

  /user/{user_id}:
    get:
      summary: Get a specific user
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Details of the user
          content:
            application/json:
              example: {'id': 1, 'name': 'John'}
    put:
      summary: Update a specific user
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              example: {'message': 'User updated successfully'}
    delete:
      summary: Delete a specific user
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              example: {'message': 'User deleted successfully'}
